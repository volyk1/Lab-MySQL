1. Вивести книги у яких не введена ціна або ціна дорівнює 0

   SELECT * FROM magas WHERE price IS NULL OR price = 0.00;

2. Вивести книги у яких введена ціна, але не введений тираж

   SELECT * FROM magas WHERE price IS NOT NULL AND circulation IS NULL;

3. Вивести книги, про дату видання яких нічого не відомо.

   SELECT * FROM magas WHERE date_ IS NULL;

4. Вивести книги, з дня видання яких пройшло не більше року.

   SELECT * FROM magas WHERE 2023 - YEAR(date_) < 1;

5. Вивести список книг-новинок, відсортованих за зростанням ціни

   SELECT * FROM magas WHERE novelty<=>'Yes' ORDER BY price ASC;

6. Вивести список книг з числом сторінок від 300 до 400, відсортованих в зворотному алфавітному порядку назв

   SELECT * FROM magas WHERE pages BETWEEN 300 AND 400 ORDER BY name DESC;

7. Вивести список книг з ціною від 20 до 40, відсортованих за спаданням дати

   SELECT * FROM magas WHERE price BETWEEN 20 AND 40 ORDER BY date_ DESC;

8. Вивести список книг, відсортованих в алфавітному порядку назв і ціною по спадаючій

   SELECT * FROM magas ORDER BY name ASC, price DESC;

9. Вивести книги, у яких ціна однієї сторінки < 10 копійок.

   SELECT * FROM magas WHERE (price / pages) < 0.10

10. Вивести значення наступних колонок: число символів в назві, перші 20 символів назви великими літерами

   SELECT LENGTH(name) as N, UPPER(LEFT(name, 20)) AS Name FROM magas;

11. Вивести значення наступних колонок: перші 10 і останні 10 символів назви прописними буквами, розділені '...'

   SELECT UPPER(CONCAT(LEFT(name, 10), '...', RIGHT(name, 10))) AS N FROM magas;

12. Вивести значення наступних колонок: назва, дата, день, місяць, рік

   SELECT name AS `name`, date_ AS `date`, DAYNAME(date_) AS `Day`, MONTHNAME(date_) AS `month`, YEAR(date_) AS `Year` FROM magas;

13. Вивести значення наступних колонок: назва, дата, дата в форматі 'dd / mm / yyyy'

   SELECT name AS `title`, date_ AS `date 1`, DATE_FORMAT(date_, '%d/%m/%Y') AS `date 2` FROM magas;

14. Вивести значення наступних колонок: код, ціна, ціна в грн., ціна в євро, ціна в руб.

   SELECT cod AS `код`, price AS `ціна`, `price`*36.73 AS `грн`, `price`*0.94 AS `євро`, `price`*76.16 AS `дол` FROM magas;

15. Вивести значення наступних колонок: код, ціна, ціна в грн. без копійок, ціна без копійок округлена

   SELECT cod AS `код`, price AS `ціна`, TRUNCATE(price*36.73, 0) AS `без копійок`, ROUND(price*36.73, 0) AS `округлена` FROM magas;

16. Додати інформацію про нову книгу (всі колонки)

   INSERT INTO magas (id_N, cod, novelty, name, price, visionary, pages, format, date_, circulation, topic, category) 
   VALUE (249, 2148, 'No', 'Гаррі Поттер і Таємна кімната', 317.67, 'АБАБАГАЛАМАГА', 479, NULL, '2002-11-24', 10000, 'Художня література', 'Книги');

17. Додати інформацію про нову книгу (колонки обов'язкові для введення)

   INSERT INTO magas (id_N, cod, novelty, name, visionary, pages, format, date_, circulation, topic, category) 
   VALUE (348, 4067, 'Yes', '#Маріуполь #Надія', 'Україна', 512, '70х100/16', '2022-10-14', 2000, 'Художня література', 'Книги');

18. Видалити книги, видані до 1990 року

   DELETE FROM magas WHERE YEAR(date_)<1990;

19. Проставити поточну дату для тих книг, у яких дата видання відсутня

   UPDATE magas SET date_ = CURDATE() WHERE date_ IS NULL;

20. Установити ознаку новинка для книг виданих після 2005 року

   UPDATE magas SET novelty ='Yes' WHERE YEAR(date_)>2005;
